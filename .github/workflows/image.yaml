name: Build image

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ci-image-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - id: set-matrix
        run: |
          content=`curl https://raw.githubusercontent.com/kairos-io/kairos/master/.github/flavors.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=matrix::{\"include\": $content }"
  build:
    needs:
      - get-matrix
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # OIDC support
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Login to Quay Registry
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Build  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
          IMAGE: quay.io/kairos/kairos-${{ matrix.flavor }}:latest
        run: |
          ./earthly.sh +all --IMAGE=$IMAGE --FLAVOR=$FLAVOR
          sudo mv build/* .
          sudo rm -rf build
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.iso.zip
          path: |
            *.iso
            *.sha256
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.sbom.zip
          path: |
            *.syft.json
            *.spdx.json
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.initrd.zip
          path: |
            *-initrd
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.squashfs.zip
          path: |
            *.squashfs
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.kernel.zip
          path: |
            *-kernel
            *-initrd
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.ipxe.zip
          path: |
            *.ipxe
          if-no-files-found: error
      - name: Push to quay
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          COSIGN_YES: true
          IMAGE: "quay.io/kairos/kairos-${{ matrix.flavor }}"
          TAG: "latest"
        run: |
          docker push "$IMAGE:$TAG"
          cosign sign $(docker image inspect --format='{{index .RepoDigests 0}}' "$IMAGE:$TAG")
      - name: Push to testing
        run: |
          docker tag quay.io/kairos/kairos-${{ matrix.flavor }}:latest ttl.sh/kairos-${{ matrix.flavor }}-${{ github.sha }}:8h
          docker push ttl.sh/kairos-${{ matrix.flavor }}-${{ github.sha }}:8h

  decentralized-and-upgrade_k8s:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        flavor: ["opensuse-leap", "alpine-opensuse-leap"]
        suite: ["upgrade-k8s", "decentralized-k8s"]
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: kairos-${{ matrix.flavor }}.iso.zip
      - name: Install deps
        run: |
          brew install cdrtools jq
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'
      - env:
          USE_QEMU: true
        run: |
              ls -liah
              export ISO=$PWD/$(ls *.iso)
              ./.github/run_test.sh ${{ matrix.suite }}

  upgrade_latest_k8s:
    needs:
      - build
      - decentralized-and-upgrade_k8s
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flavor: ["alpine-opensuse-leap", "opensuse-leap"]
    steps:
      - uses: actions/checkout@v3
      - uses: robinraju/release-downloader@v1.7
        with:
          # A flag to set the download target as latest release
          # The default value is 'false'
          latest: true
          repository: "kairos-io/provider-kairos"
          fileName: "kairos-${{ matrix.flavor }}-*v1.25*.iso"
          out-file-path: "latest-release-${{ matrix.flavor }}.zip"
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: latest-release-${{ matrix.flavor }}.zip
      - name: Install deps
        run: |
          brew install cdrtools jq
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'
      - env:
          USE_QEMU: true
        run: |
              ls -liah
              export ISO=$PWD/$(ls kairos-${{ matrix.flavor }}-*.iso | tail -n1 )
              export CONTAINER_IMAGE=ttl.sh/kairos-${{ matrix.flavor }}-${{ github.sha }}:8h
              ./.github/run_test.sh "upgrade-latest-with-kubernetes"
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.flavor }}-upgrade-test.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn

  provider_upgrade:
    needs:
      - build
      - upgrade_latest_k8s
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: kairos-opensuse-leap.iso.zip
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'
      - env:
          USE_QEMU: true
        run: |
              ls -liah
              export ISO=$PWD/$(ls *.iso)
              ./.github/run_test.sh "provider-upgrade"

  install_qrcode:
    needs:
    - build
    - provider_upgrade
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: kairos-alpine-opensuse-leap.iso.zip
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: '^1.20'
    - env:
        USE_QEMU: true
      run: |
            ls -liah
            export ISO=$PWD/$(ls *.iso)
            ./.github/run_test.sh "qrcode-install"
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: ${{ matrix.flavor }}-qrcode-test.logs.zip
        path: tests/**/logs/*
        if-no-files-found: warn
